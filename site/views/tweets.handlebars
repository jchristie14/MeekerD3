	<div id="vizcontainder">
	  <svg style="width:500px;height:500px;border:1px lightgray solid;" />
	</div>

<script>

d3.json("tweets.json",function(error,data) {dataViz(data.tweets)});

function dataViz(incomingData){
	incomingData.forEach(function(el){
		el.impact=el.favorites.length+el.retweets.length;
		el.tweetTime=new Date(el.timestamp);
	})

	var maxImpact=d3.max(incomingData, function(el){return el.impact;});
	var startEnd=d3.extent(incomingData, function(el){
		return el.tweetTime;
	});
	var timeRamp=d3.scaleTime().domain(startEnd).range([50,450]);
	var yScale=d3.scaleLinear().domain([0,maxImpact]).range([0,460]);
	var radiusScale=d3.scaleLinear().domain([0,maxImpact]).range([1,20]);
	var colorScale=d3.scaleLinear().domain([0,maxImpact]).range(["white","#990000"]);

	d3.select("svg")
		.selectAll("circle")
		.data(incomingData, function(d){
			return JSON.stringify(d)
		})
		.enter()
		.append("circle")
		.attr("r", function(d){return radiusScale(d.impact);})
		.attr("cx", function(d,i){return timeRamp(d.tweetTime);})
		.attr("cy", function(d){return 480-yScale(d.impact);})
		.style("fill", function(d){return colorScale(d.impact);})
		.style("stroke", "black")
		.style("stroke-width", "1px");
	

	// //Demonstration of .exit()
	// var filteredData = incomingData.filter(function(el){return el.impact>0});
	// d3.selectAll("circle")
	// 	.data(filteredData, function(d) {return JSON.stringify(d)})
	// 	.exit()
	// 	.remove();


	//	//Label-maker; not very attractive display
	// var tweetG=d3.select("svg")
	// 	.selectAll("g")
	// 	.data(incomingData)
	// 	.enter()
	// 	.append("g")
	// 	.attr("transform", function(d){
	// 		return "translate("+timeRamp(d.tweetTime)+","+(480-yScale(d.impact))+")";
	// 	});
	// tweetG.append("circle")
	// 	.attr("r", function(d){return radiusScale(d.impact);})
	// 	.style("fill", "#990000")
	// 	.style("stroke", "black")
	// 	.style("stroke-width","1px");
	// tweetG.append("text")
	// 	.text(function(d){return d.user+"-"+d.tweetTime.getHours();});

}



// 	var nestedTweets=d3.nest()
// 		.key(function (el) {return el.user;})
// 		.entries(incomingData);

// 		console.log(nestedTweets)

// 		nestedTweets.forEach(function(el){
// 			el.numTweets=el.values.length;
// 		})

// 		var maxTweets=d3.max(nestedTweets, function(el){return el.numTweets});

// 		var yScale=d3.scaleLinear().domain([0,maxTweets]).range([0,100]);

// 		d3.select("svg")
// 			.selectAll("rect")
// 			.data(nestedTweets)
// 			.enter()
// 			.append("rect")
// 			.attr("width",50)
// 			.attr("height", function(d) {return yScale(d.numTweets);})
// 			.attr("x", function(d,i) {return i*60;})
// 			.attr("y", function(d) {return 100-yScale(d.numTweets);})
// 			.style("fill", "blue")
// 			.style("stroke", "red")
// 			.style("stroke-width", "1px").style("opacity", .25);

// }

</script>